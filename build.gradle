plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20-Beta'
    id("com.github.johnrengelman.shadow") version ("7.1.2")

}

group = 'com.github.dongzh1'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }


}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0";
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation("de.tr7zw:item-nbt-api:2.11.1")
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.11.1")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
shadowJar {
    relocate("de.tr7zw.changeme.nbtapi", "com.github.dongzh1.pixelworld.nbtapi")
}

